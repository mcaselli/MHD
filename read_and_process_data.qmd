
```{r}
#read data
rev <- read_xlsx(here("data", "RevBySource.xlsx"),
                 skip=1,
                 .name_repair = "universal") %>%
  mutate(across(DOR.Code:Fiscal.Year, as.factor))

inc <- read_xlsx(here("data", "DOR_Income_EQV_Per_Capita.xlsx"), 
                .name_repair = "universal") %>% 
  mutate(across(DOR.Code:Cherry.Sheet.FY, as.factor))
```

```{r}
# check that the municipalities in the two datasets are set-equivalent
setequal(unique(inc$Municipality), unique(rev$Municipality))
```

```{r}
#check that the length of the two datasets are equal
nrow(inc) == nrow(rev)
```
```{r}
rev_inc <- rev %>%
  left_join(inc, by=c("DOR.Code", "Municipality")) %>%
  mutate(pci_rank = rank(DOR.Income.Per.Capita),
         pci_percentile=pci_rank/n(),
         per_capita_receipts = Total.Receipts...9/Population,
         pc_receipts_rank = rank(per_capita_receipts),
         pc_receipts_percentile = pc_receipts_rank/n(),
         pc_levy = Tax.Levy/Population,
         pc_levy_rank = rank(pc_levy),
         pc_levy_percentile = pc_levy_rank/n())
```



```{r}
sal<- read.csv(here("data", "TeacherSalaries.csv")) %>%
  #rename sal column District.Name to Municipality
  rename(Municipality = District.Name) %>%
  mutate(across(!Municipality & !District.Code & where(is.character), parse_number))

age<- read.csv(here("data", "EducatorsbyAgeGroupsReport.csv"))


#make a new column in age that calculates the sum of all the columns that start with X
age <- age %>% mutate(TotalEducators = rowSums(select(age, starts_with("X")))) %>%
  #make a new column for each column that starts with X that takes the value in that column and divides it by Total Educators
  mutate(across(starts_with("X"), ~ . / FTE.Count)) %>%
  #mutate the colunn called Over.64.yrs.... to divide it by TotalEducators
  mutate(Over.64.yrs.... = Over.64.yrs.... / FTE.Count) %>%
  #rename the column called X.26.yrs..... to <26
  rename('<26' = X.26.yrs.....) %>%
  #rename the column called Over.64.yrs.... to Older
  rename('64 or more' = Over.64.yrs....) %>%
  #rename the columns starting with X so they are just the first two digit number that appears in the name
  rename_with(~str_extract(., "\\d{2}"), starts_with("X"))

#turn the data into longform making a row for columns <26, 26, 33, 41, 49, 57, Older
age_long <- age %>%
  pivot_longer(cols = c(`<26`, `26`, `33`, `41`, `49`, `57`, `64 or more`), names_to = "AgeGroup", values_to = "Percent")
```


```{r}
#merge income and salaries
merged <- merge(inc, sal, by = "Municipality") %>%
  mutate(across(c(DOR.Income.Per.Capita, Average.Salary), as.numeric),
         income_percentile=rank(DOR.Income.Per.Capita)/n(), 
         salary_percentile=rank(Average.Salary)/n())

```

```{r}
mhd_percentiles <- merged %>% 
  filter(Municipality == "Marblehead") %>% 
  select(contains("percentile"))

mhd_income_peers <- merged %>%
  filter(between(income_percentile,
                 mhd_percentiles$income_percentile - 0.05,
                 mhd_percentiles$income_percentile + 0.05))
```

```{r}
#merge tax and income data
rev_inc <- rev %>%
  left_join(inc, by=c("DOR.Code", "Municipality")) %>%
  mutate(pci_rank = rank(DOR.Income.Per.Capita),
         pci_percentile=pci_rank/n(),
         per_capita_receipts = Total.Receipts...9/Population,
         pc_receipts_rank = rank(per_capita_receipts),
         pc_receipts_percentile = pc_receipts_rank/n(),
         pc_levy = Tax.Levy/Population,
         pc_levy_rank = rank(pc_levy),
         pc_levy_percentile = pc_levy_rank/n())
```


```{r}
 #merge rev_inc with sal
rev_inc_sal <- rev_inc %>%
  left_join(sal, by=c("Municipality")) %>%
  filter(!is.na(Average.Salary)) %>%
  mutate(tax_percentile=rank(per_capita_receipts)/n(), 
         salary_percentile=rank(Average.Salary)/n())
```

```{r}
mhd_tax_percentiles <- rev_inc_sal %>%
  filter(Municipality == "Marblehead") %>%
  select(tax_percentile, salary_percentile)
```

```{r}
mhd_tax_peers <- rev_inc_sal %>%
  filter(!is.na(Average.Salary)) %>%
  filter(between(tax_percentile,
                 mhd_tax_percentiles$tax_percentile - 0.05,
                 mhd_tax_percentiles$tax_percentile + 0.05))
```

